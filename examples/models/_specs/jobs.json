{
  "components": {
    "schemas": {
      "ActionContextSchema": {
        "properties": {
          "ABORT": {
            "$ref": "#/components/schemas/ActionContextValue"
          },
          "CHANGE_PRIORITY": {
            "$ref": "#/components/schemas/ActionContextValue"
          },
          "PAUSE": {
            "$ref": "#/components/schemas/ActionContextValue"
          },
          "RESTART": {
            "$ref": "#/components/schemas/ActionContextValue"
          },
          "RESUME": {
            "$ref": "#/components/schemas/ActionContextValue"
          }
        },
        "type": "object"
      },
      "ActionContextValue": {
        "properties": {
          "bulk": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActionContextValueSchema": {
        "properties": {
          "bulk": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BaseQueryParamsSchema": {
        "properties": {
          "page": {
            "default": 1,
            "description": "Which page number to fetch",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "per_page": {
            "default": 10,
            "description": "The number of items for each page",
            "format": "int32",
            "maximum": 1000,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "sort": {
            "description": "A comma separated list of fieldnames with order (asc/desc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobBaseSchema": {
        "properties": {
          "action_context": {
            "$ref": "#/components/schemas/ActionContextSchema"
          },
          "children_progress": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JobChildProgressSchema"
            },
            "readOnly": true,
            "type": "object"
          },
          "completed_at": {
            "format": "date-time",
            "type": "string"
          },
          "custom_type": {
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "has_children": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "job_context": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "object_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "nullable": true,
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "progress": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "progress_processed": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "progress_total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "related_objects": {
            "items": {
              "$ref": "#/components/schemas/RelatedObject"
            },
            "minItems": 1,
            "type": "array"
          },
          "started_at": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "READY",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNING",
              "FAILED",
              "WAITING",
              "ABORT_PENDING",
              "ABORTED",
              "SKIPPED",
              "PAUSED"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "MEDIAINFO",
              "TRANSCODE",
              "KEYFRAMES",
              "EXPORT",
              "DELETE",
              "REINDEX",
              "MOVE",
              "TRANSFER",
              "ANALYZE",
              "METADATA",
              "CUSTOM",
              "SCAN",
              "ARCHIVE",
              "RESTORE",
              "RESTORE_FROM_GLACIER",
              "ACL",
              "COPY",
              "TRANSCRIPTION",
              "REQUEST_COLLECTION_MAP",
              "COLLECTION_CUSTOM_ORDER",
              "STORAGE_GATEWAY_FILE_INGEST",
              "MARK_MISSING",
              "FACE_RECOGNITION",
              "SET_APPROVAL",
              "REQUEST_APPROVAL",
              "CHANGE_PERSON",
              "CONFIRM_PERSON",
              "DELETE_PERSON",
              "AUTOMATION",
              "REVIEW_REQUEST",
              "CONVERT_SAVED_SEARCH_TO_COLLECTION"
            ],
            "type": "string"
          }
        },
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object"
      },
      "JobChildProgressSchema": {
        "properties": {
          "progress_processed": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "progress_total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "status": {
            "enum": [
              "READY",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNING",
              "FAILED",
              "WAITING",
              "ABORT_PENDING",
              "ABORTED",
              "SKIPPED",
              "PAUSED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobCreateSchema": {
        "properties": {
          "action_context": {
            "$ref": "#/components/schemas/ActionContextSchema"
          },
          "children_progress": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JobChildProgressSchema"
            },
            "readOnly": true,
            "type": "object"
          },
          "completed_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "format": "uuid",
            "type": "string"
          },
          "custom_type": {
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "has_children": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "job_context": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "object_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "nullable": true,
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "progress": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "progress_processed": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "progress_total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "related_objects": {
            "items": {
              "$ref": "#/components/schemas/RelatedObject"
            },
            "minItems": 1,
            "type": "array"
          },
          "started_at": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "READY",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNING",
              "FAILED",
              "WAITING",
              "ABORT_PENDING",
              "ABORTED",
              "SKIPPED",
              "PAUSED"
            ],
            "type": "string"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/JobStep"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "MEDIAINFO",
              "TRANSCODE",
              "KEYFRAMES",
              "EXPORT",
              "DELETE",
              "REINDEX",
              "MOVE",
              "TRANSFER",
              "ANALYZE",
              "METADATA",
              "CUSTOM",
              "SCAN",
              "ARCHIVE",
              "RESTORE",
              "RESTORE_FROM_GLACIER",
              "ACL",
              "COPY",
              "TRANSCRIPTION",
              "REQUEST_COLLECTION_MAP",
              "COLLECTION_CUSTOM_ORDER",
              "STORAGE_GATEWAY_FILE_INGEST",
              "MARK_MISSING",
              "FACE_RECOGNITION",
              "SET_APPROVAL",
              "REQUEST_APPROVAL",
              "CHANGE_PERSON",
              "CONFIRM_PERSON",
              "DELETE_PERSON",
              "AUTOMATION",
              "REVIEW_REQUEST",
              "CONVERT_SAVED_SEARCH_TO_COLLECTION"
            ],
            "type": "string"
          }
        },
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object"
      },
      "JobElasticSchema": {
        "properties": {
          "action_context": {
            "$ref": "#/components/schemas/ActionContextSchema"
          },
          "children_progress": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JobChildProgressSchema"
            },
            "readOnly": true,
            "type": "object"
          },
          "completed_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "custom_type": {
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "has_children": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "job_context": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "object_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "nullable": true,
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "progress": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "progress_processed": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "progress_total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "related_objects": {
            "items": {
              "$ref": "#/components/schemas/RelatedObject"
            },
            "minItems": 1,
            "type": "array"
          },
          "started_at": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "READY",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNING",
              "FAILED",
              "WAITING",
              "ABORT_PENDING",
              "ABORTED",
              "SKIPPED",
              "PAUSED"
            ],
            "type": "string"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/JobStepElastic"
            },
            "readOnly": true,
            "type": "array"
          },
          "storage_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "MEDIAINFO",
              "TRANSCODE",
              "KEYFRAMES",
              "EXPORT",
              "DELETE",
              "REINDEX",
              "MOVE",
              "TRANSFER",
              "ANALYZE",
              "METADATA",
              "CUSTOM",
              "SCAN",
              "ARCHIVE",
              "RESTORE",
              "RESTORE_FROM_GLACIER",
              "ACL",
              "COPY",
              "TRANSCRIPTION",
              "REQUEST_COLLECTION_MAP",
              "COLLECTION_CUSTOM_ORDER",
              "STORAGE_GATEWAY_FILE_INGEST",
              "MARK_MISSING",
              "FACE_RECOGNITION",
              "SET_APPROVAL",
              "REQUEST_APPROVAL",
              "CHANGE_PERSON",
              "CONFIRM_PERSON",
              "DELETE_PERSON",
              "AUTOMATION",
              "REVIEW_REQUEST",
              "CONVERT_SAVED_SEARCH_TO_COLLECTION"
            ],
            "type": "string"
          }
        },
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object"
      },
      "JobSchema": {
        "properties": {
          "action_context": {
            "$ref": "#/components/schemas/ActionContextSchema"
          },
          "children_progress": {
            "additionalProperties": {
              "$ref": "#/components/schemas/JobChildProgressSchema"
            },
            "readOnly": true,
            "type": "object"
          },
          "completed_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "custom_type": {
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "type": "string"
          },
          "has_children": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "job_context": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object"
          },
          "object_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "object_type": {
            "nullable": true,
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "progress": {
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "progress_processed": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "progress_total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "type": "integer"
          },
          "related_objects": {
            "items": {
              "$ref": "#/components/schemas/RelatedObject"
            },
            "minItems": 1,
            "type": "array"
          },
          "started_at": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "READY",
              "STARTED",
              "FINISHED",
              "FINISHED_WITH_WARNING",
              "FAILED",
              "WAITING",
              "ABORT_PENDING",
              "ABORTED",
              "SKIPPED",
              "PAUSED"
            ],
            "type": "string"
          },
          "steps": {
            "items": {
              "$ref": "#/components/schemas/JobStep"
            },
            "readOnly": true,
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "enum": [
              "MEDIAINFO",
              "TRANSCODE",
              "KEYFRAMES",
              "EXPORT",
              "DELETE",
              "REINDEX",
              "MOVE",
              "TRANSFER",
              "ANALYZE",
              "METADATA",
              "CUSTOM",
              "SCAN",
              "ARCHIVE",
              "RESTORE",
              "RESTORE_FROM_GLACIER",
              "ACL",
              "COPY",
              "TRANSCRIPTION",
              "REQUEST_COLLECTION_MAP",
              "COLLECTION_CUSTOM_ORDER",
              "STORAGE_GATEWAY_FILE_INGEST",
              "MARK_MISSING",
              "FACE_RECOGNITION",
              "SET_APPROVAL",
              "REQUEST_APPROVAL",
              "CHANGE_PERSON",
              "CONFIRM_PERSON",
              "DELETE_PERSON",
              "AUTOMATION",
              "REVIEW_REQUEST",
              "CONVERT_SAVED_SEARCH_TO_COLLECTION"
            ],
            "type": "string"
          }
        },
        "required": [
          "status",
          "title",
          "type"
        ],
        "type": "object"
      },
      "JobStep": {
        "properties": {
          "date_updated": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "WAITING",
              "FAILED",
              "DONE",
              "SKIPPED"
            ],
            "type": "string"
          }
        },
        "required": [
          "label",
          "status"
        ],
        "type": "object"
      },
      "JobStepElastic": {
        "properties": {
          "date_updated": {
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ],
        "type": "object"
      },
      "JobStepElasticSchema": {
        "properties": {
          "date_updated": {
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ],
        "type": "object"
      },
      "JobStepSchema": {
        "properties": {
          "date_updated": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "WAITING",
              "FAILED",
              "DONE",
              "SKIPPED"
            ],
            "type": "string"
          }
        },
        "required": [
          "label",
          "status"
        ],
        "type": "object"
      },
      "JobStepUpdateBulkSchema": {
        "properties": {
          "date_updated": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "WAITING",
              "FAILED",
              "DONE",
              "SKIPPED"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "label",
          "status"
        ],
        "type": "object"
      },
      "JobStepUpdateSchema": {
        "properties": {
          "date_updated": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error_message": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "message": {
            "nullable": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "WAITING",
              "FAILED",
              "DONE",
              "SKIPPED"
            ],
            "type": "string"
          }
        },
        "required": [
          "label",
          "status"
        ],
        "type": "object"
      },
      "JobStepsSchema": {
        "properties": {
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/JobStepSchema"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "scroll_id": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobStepsUpdateSchema": {
        "properties": {
          "steps": {
            "items": {
              "$ref": "#/components/schemas/JobStepUpdateBulkSchema"
            },
            "type": "array"
          }
        },
        "required": [
          "steps"
        ],
        "type": "object"
      },
      "JobsBulkActionSchema": {
        "properties": {
          "job_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "job_ids"
        ],
        "type": "object"
      },
      "JobsBulkDeleteSchema": {
        "properties": {
          "job_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "job_ids"
        ],
        "type": "object"
      },
      "JobsPrioritySchema": {
        "properties": {
          "job_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 1,
            "type": "array"
          },
          "priority": {
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "job_ids",
          "priority"
        ],
        "type": "object"
      },
      "JobsQueryParamsSchema": {
        "properties": {
          "page": {
            "default": 1,
            "description": "Which page number to fetch",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "per_page": {
            "default": 10,
            "description": "The number of items for each page",
            "format": "int32",
            "maximum": 1000,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "scroll": {
            "type": "boolean"
          },
          "scroll_id": {
            "format": "uuid",
            "type": "string"
          },
          "sort": {
            "description": "A comma separated list of fieldnames with order (asc/desc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobsSchema": {
        "properties": {
          "facets": {
            "type": "object"
          },
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/JobElasticSchema"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "scroll_id": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "JobsStateSchema": {
        "properties": {
          "action": {
            "enum": [
              "PAUSE",
              "RESUME",
              "ABORT",
              "RESTART"
            ],
            "type": "string"
          },
          "job_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 500,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "action",
          "job_ids"
        ],
        "type": "object"
      },
      "ListObjectsSchema": {
        "properties": {
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "scroll_id": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ReindexJobSchema": {
        "properties": {
          "sync_to_another_dc": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RelatedObject": {
        "properties": {
          "object_id": {
            "format": "uuid",
            "type": "string"
          },
          "object_type": {
            "type": "string"
          }
        },
        "required": [
          "object_id",
          "object_type"
        ],
        "type": "object"
      },
      "RelatedObjectSchema": {
        "properties": {
          "object_id": {
            "format": "uuid",
            "type": "string"
          },
          "object_type": {
            "type": "string"
          }
        },
        "required": [
          "object_id",
          "object_type"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Iconik Jobs",
    "version": "2.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {},
    "/ip/": {},
    "/livez/": {},
    "/readyz/": {},
    "/spec/": {},
    "/static/{filename}": {},
    "/v1/jobs/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsBulkDeleteSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete multiple jobs by ids list"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "If facets should be returned",
            "in": "query",
            "name": "facets",
            "schema": {
              "default": true,
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "List of aggregation keys if facets is true",
            "in": "query",
            "name": "aggregations",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "If true passed then uses scroll pagination instead of default one",
            "in": "query",
            "name": "scroll",
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "In order to get next batch of results using scroll pagination the scroll_id is required",
            "in": "query",
            "name": "scroll_id",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "A comma separated list of fieldnames with order. For example - first_name,asc;last_name,desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by type",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by object_type",
            "in": "query",
            "name": "object_type",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by parent_id",
            "in": "query",
            "name": "parent_id",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by object_id",
            "in": "query",
            "name": "object_id",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by status",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by created_by",
            "in": "query",
            "name": "created_by",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_created. Can either be a single ISO8601 timestamp or two timestamps separated by a semicolon `;`. The timestamp can also be expressed as number of milliseconds since Jan 1 1970 (epoch). Either timestamp can also be replaced with an asterisk `*` to make the query open ended.\nFor example: 2018-01-01T10:00:00Z;2018-01-01T15:00:00Z",
            "in": "query",
            "name": "date_created",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_modified Can either be a single ISO8601 timestamp or two timestamps separated by a semicolon `;`. The timestamp can also be expressed as number of milliseconds since Jan 1 1970 (epoch). Either timestamp can also be replaced with an asterisk `*` to make the query open ended.\nFor example: *;1544450400",
            "in": "query",
            "name": "date_modified",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by any of the above with wildcard support",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter list of id:s (comma separated)",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Gives an ability to retrieve jobs created by a specific automation",
            "in": "query",
            "name": "metadata.automation_id",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter jobs that have no fields specified in _missing_ (comma separated)",
            "in": "query",
            "name": "_missing_",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter jobs that have all fields specified in _exists_ (comma separated)",
            "in": "query",
            "name": "_exists_",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsSchema"
                }
              }
            },
            "description": "Returns a list of jobs"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Requested page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get list of jobs"
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns a created job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Create a new job"
      }
    },
    "/v1/jobs/priority/": {
      "put": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsPrioritySchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "403": {
            "description": "Forbidden"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change jobs priority"
      }
    },
    "/v1/jobs/state/": {
      "put": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobsStateSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change jobs state"
      }
    },
    "/v1/jobs/{job_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Job does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a particular job by id"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns a job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Job does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns a particular job by id"
      },
      "patch": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "merge_metadata",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update job"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "merge_metadata",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update job"
      }
    },
    "/v1/jobs/{job_id}/reindex/": {
      "post": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReindexJobSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "202": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Reindex job"
      }
    },
    "/v1/jobs/{job_id}/steps/": {
      "patch": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStepsUpdateSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update multiple job steps"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStepsUpdateSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update multiple job steps"
      }
    },
    "/v1/jobs/{job_id}/steps/{job_step_id}/": {
      "patch": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_step_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStepSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update job step"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_jobs\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "job_step_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStepSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSchema"
                }
              }
            },
            "description": "Returns an updated job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update job step"
      }
    },
    "/v1/stats/{system_domain_id}/jobs/": {}
  },
  "servers": [
    {
      "url": "/API/jobs/"
    }
  ]
}