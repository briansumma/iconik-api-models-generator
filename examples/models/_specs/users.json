{
  "components": {
    "schemas": {
      "BaseQueryParamsSchema": {
        "properties": {
          "page": {
            "default": 1,
            "description": "Which page number to fetch",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "per_page": {
            "default": 10,
            "description": "The number of items for each page",
            "format": "int32",
            "maximum": 1000,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "sort": {
            "description": "A comma separated list of fieldnames with order (asc/desc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DomainUsersByEmailSchema": {
        "properties": {
          "facets": {
            "type": "object"
          },
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "mfa_methods": {
            "items": {
              "enum": [
                "TOTP",
                "MAIL_2SV"
              ],
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "mfa_required": {
            "readOnly": true,
            "type": "boolean"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/UserElastic"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GroupBaseSchema": {
        "properties": {
          "alias": {
            "type": "string"
          },
          "default_user_type": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external_id": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_saml_group": {
            "readOnly": true,
            "type": "boolean"
          },
          "logo": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role_categories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleCategories"
              }
            ],
            "nullable": true
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "saml_primary_group_priority": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GroupCreateSchema": {
        "properties": {
          "alias": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "default_user_type": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external_id": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_saml_group": {
            "readOnly": true,
            "type": "boolean"
          },
          "logo": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role_categories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleCategories"
              }
            ],
            "nullable": true
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "saml_primary_group_priority": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "system_domain_id": {
            "format": "uuid",
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "name",
          "system_domain_id"
        ],
        "type": "object"
      },
      "GroupElasticSchema": {
        "properties": {
          "alias": {
            "type": "string"
          },
          "date_created": {
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "readOnly": true,
            "type": "string"
          },
          "default_user_type": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external_id": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_saml_group": {
            "readOnly": true,
            "type": "boolean"
          },
          "logo": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role_categories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleCategories"
              }
            ],
            "nullable": true
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "saml_primary_group_priority": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GroupMappingSchema": {
        "properties": {
          "group_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "group_id",
          "name"
        ],
        "type": "object"
      },
      "GroupMappingsSchema": {
        "properties": {
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/GroupMappingSchema"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GroupSchema": {
        "properties": {
          "alias": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "default_user_type": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "external_id": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_saml_group": {
            "readOnly": true,
            "type": "boolean"
          },
          "logo": {
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role_categories": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleCategories"
              }
            ],
            "nullable": true
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "saml_primary_group_priority": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GroupsQueryParamsSchema": {
        "properties": {
          "page": {
            "default": 1,
            "description": "Which page number to fetch",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "per_page": {
            "default": 10,
            "description": "The number of items for each page",
            "format": "int32",
            "maximum": 1000,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "sort": {
            "description": "A comma separated list of fieldnames with order (asc/desc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GroupsSchema": {
        "properties": {
          "facets": {
            "type": "object"
          },
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/GroupElasticSchema"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ListObjectsSchema": {
        "properties": {
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MultiplatformUserPasswordEditSchema": {
        "properties": {
          "current_password": {
            "type": "string",
            "writeOnly": true
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "ignore_current_password": {
            "nullable": true,
            "type": "boolean"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "MultiplatformUserSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "OtpEditInternalSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "mfa_required": {
            "type": "boolean"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "OtpEditSchema": {
        "properties": {
          "mfa_required": {
            "type": "boolean"
          },
          "otp": {
            "type": "string"
          },
          "otp_type": {
            "enum": [
              "TOTP",
              "MAIL_2SV"
            ],
            "type": "string"
          }
        },
        "required": [
          "otp",
          "otp_type"
        ],
        "type": "object"
      },
      "OtpGenerateInternalSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "OtpInternalSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "otp": {
            "type": "string"
          },
          "otp_type": {
            "enum": [
              "TOTP",
              "MAIL_2SV"
            ],
            "type": "string"
          }
        },
        "required": [
          "email",
          "otp",
          "otp_type"
        ],
        "type": "object"
      },
      "OtpSchema": {
        "properties": {
          "otp": {
            "type": "string"
          },
          "otp_type": {
            "enum": [
              "TOTP",
              "MAIL_2SV"
            ],
            "type": "string"
          }
        },
        "required": [
          "otp",
          "otp_type"
        ],
        "type": "object"
      },
      "ReindexGroupSchema": {
        "properties": {
          "sync_to_another_dc": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ReindexUserSchema": {
        "properties": {
          "sync_to_another_dc": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RoleCategories": {
        "properties": {
          "assets_edit": {
            "type": "boolean"
          },
          "billing": {
            "type": "boolean"
          },
          "collaborate": {
            "type": "boolean"
          },
          "core": {
            "type": "boolean"
          },
          "download": {
            "type": "boolean"
          },
          "integrations_admin": {
            "type": "boolean"
          },
          "metadata_admin": {
            "type": "boolean"
          },
          "organize": {
            "type": "boolean"
          },
          "others": {
            "type": "boolean"
          },
          "storage_admin": {
            "type": "boolean"
          },
          "upload": {
            "type": "boolean"
          },
          "users_groups_admin": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RoleCategoriesSchema": {
        "properties": {
          "assets_edit": {
            "type": "boolean"
          },
          "billing": {
            "type": "boolean"
          },
          "collaborate": {
            "type": "boolean"
          },
          "core": {
            "type": "boolean"
          },
          "download": {
            "type": "boolean"
          },
          "integrations_admin": {
            "type": "boolean"
          },
          "metadata_admin": {
            "type": "boolean"
          },
          "organize": {
            "type": "boolean"
          },
          "others": {
            "type": "boolean"
          },
          "storage_admin": {
            "type": "boolean"
          },
          "upload": {
            "type": "boolean"
          },
          "users_groups_admin": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserBaseSchema": {
        "properties": {
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserByEmailAndLoginTypeSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "login_type": {
            "enum": [
              "SSO",
              "PASSWORD"
            ],
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "UserByEmailSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "UserCreateSchema": {
        "properties": {
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserEditInternalSchema": {
        "properties": {
          "current_password": {
            "type": "string",
            "writeOnly": true
          },
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserEditSchema": {
        "properties": {
          "current_password": {
            "type": "string",
            "writeOnly": true
          },
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserElastic": {
        "properties": {
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "readOnly": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_modified": {
            "readOnly": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserElasticSchema": {
        "properties": {
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "readOnly": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_modified": {
            "readOnly": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserLoginSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "UserOTPEditMultiPlatformSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "mfa_required": {
            "nullable": true,
            "type": "boolean"
          },
          "otp_secret": {
            "nullable": true,
            "type": "string"
          },
          "totp_last_counter": {
            "nullable": true,
            "type": "integer"
          },
          "totp_verified": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "UserRolesSchema": {
        "properties": {
          "objects": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UserSamlCreateSchema": {
        "properties": {
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "group_names": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "email",
          "first_name"
        ],
        "type": "object"
      },
      "UserSamlIdpUpdateSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "email",
          "identity_provider_id"
        ],
        "type": "object"
      },
      "UserSamlUpdateSchema": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "group_names": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "identity_provider_id": {
            "format": "uuid",
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "UserSchema": {
        "properties": {
          "app_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "date_checklist_completed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_first_uploaded": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_modified": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "date_terms_accepted": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "date_welcomed": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Available only for admin users",
            "type": "string"
          },
          "disable_mixpanel": {
            "readOnly": true,
            "type": "boolean"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "email_marketing_consent": {
            "nullable": true,
            "type": "boolean"
          },
          "first_name": {
            "type": "string"
          },
          "groups": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "hide_email": {
            "type": "boolean"
          },
          "hide_phone": {
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "identity_provider_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "is_super_admin": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_super_admin_light": {
            "readOnly": true,
            "type": "boolean"
          },
          "last_name": {
            "type": "string"
          },
          "last_successful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_unsuccessful_auth": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "last_web_login": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "nullable": true
          },
          "onboarding_goal": {
            "enum": [
              "CENTRALIZE",
              "COLLABORATE",
              "REVISIT"
            ],
            "nullable": true,
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "password_changed": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "photo": {
            "readOnly": true,
            "type": "string"
          },
          "photo_big": {
            "readOnly": true,
            "type": "string"
          },
          "photo_small": {
            "readOnly": true,
            "type": "string"
          },
          "photo_storage_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "primary_group": {
            "format": "uuid",
            "type": "string"
          },
          "status": {
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "DELETED"
            ],
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domains": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "system_metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserSystemMetadata"
              }
            ],
            "readOnly": true
          },
          "system_name": {
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "POWER",
              "STANDARD",
              "BROWSE_ONLY",
              "BROWSE_API_ONLY"
            ],
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "type"
        ],
        "type": "object"
      },
      "UserSystemMetadata": {
        "properties": {
          "saml_created": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UserSystemMetadataSchema": {
        "properties": {
          "saml_created": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UsersByEmailsSchema": {
        "properties": {
          "emails": {
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "emails"
        ],
        "type": "object"
      },
      "UsersQueryParamsSchema": {
        "properties": {
          "page": {
            "default": 1,
            "description": "Which page number to fetch",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "per_page": {
            "default": 10,
            "description": "The number of items for each page",
            "format": "int32",
            "maximum": 1000,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "sort": {
            "description": "A comma separated list of fieldnames with order (asc/desc)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsersSchema": {
        "properties": {
          "facets": {
            "type": "object"
          },
          "first_url": {
            "readOnly": true,
            "type": "string"
          },
          "last_url": {
            "readOnly": true,
            "type": "string"
          },
          "next_url": {
            "readOnly": true,
            "type": "string"
          },
          "objects": {
            "items": {
              "$ref": "#/components/schemas/UserElasticSchema"
            },
            "readOnly": true,
            "type": "array"
          },
          "page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "per_page": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "readOnly": true,
            "type": "integer"
          },
          "prev_url": {
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Iconik Users",
    "version": "2.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {},
    "/ip/": {},
    "/livez/": {},
    "/readyz/": {},
    "/spec/": {},
    "/static/{filename}": {},
    "/v1/groups/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A comma separated list of fieldnames with order. For example - first_name,asc;last_name,desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by alias",
            "in": "query",
            "name": "alias",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by descripton",
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by name",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by roles",
            "in": "query",
            "name": "roles",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_created",
            "in": "query",
            "name": "date_created",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_modified",
            "in": "query",
            "name": "date_modified",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by any of field with wildcard support",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter list of id:s (comma separated)",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupsSchema"
                }
              }
            },
            "description": "Returns a list of groups"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Requested page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List groups with details"
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSchema"
                }
              }
            },
            "description": "Returns a created group"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Create a new group"
      }
    },
    "/v1/groups/basic/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A comma separated list of fieldnames with order. For example - first_name,asc;last_name,desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by alias",
            "in": "query",
            "name": "alias",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by descripton",
            "in": "query",
            "name": "description",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by name",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by roles",
            "in": "query",
            "name": "roles",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_created",
            "in": "query",
            "name": "date_created",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_modified",
            "in": "query",
            "name": "date_modified",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by any of first_name, last_name and email with wildcard support",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter list of id:s (comma separated)",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupsSchema"
                }
              }
            },
            "description": "Returns a list of groups"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Requested page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List groups info without details"
      }
    },
    "/v1/groups/copy/": {},
    "/v1/groups/mappings/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_group_mappings\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "last_id",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMappingsSchema"
                }
              }
            },
            "description": "Returns a list of group mappings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Requested page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get all group mappings"
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_group_mappings\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupMappingSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMappingSchema"
                }
              }
            },
            "description": "Returns a created group mapping"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "409": {
            "description": "Group mapping already exists"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Create a new group mapping"
      }
    },
    "/v1/groups/mappings/{name}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_group_mappings\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group mapping does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete group mapping by name"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_group_mappings\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMappingSchema"
                }
              }
            },
            "description": "Returns a group mapping"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Requested page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get a group mapping"
      }
    },
    "/v1/groups/{group_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a particular group by id"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSchema"
                }
              }
            },
            "description": "Returns a group"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns a particular group by id"
      },
      "patch": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSchema"
                }
              }
            },
            "description": "Returns an updated group"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update group"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSchema"
                }
              }
            },
            "description": "Returns an updated group"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update group"
      }
    },
    "/v1/groups/{group_id}/logo/": {
      "delete": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No body"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete group logo image."
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "image/*": {
              "schema": {
                "properties": {
                  "logo": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "logo": {
                      "description": "Url for the group logo",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns url for group logo"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Upload group logo image."
      }
    },
    "/v1/groups/{group_id}/reindex/": {
      "post": {
        "description": "\nRequired roles:\n - can_reindex_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Reindex a particular group by id"
      }
    },
    "/v1/groups/{group_id}/users/{user_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User or Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a user from group"
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a user"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User or Group does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Add user into a group"
      }
    },
    "/v1/multiplatform/check/user/": {},
    "/v1/multiplatform/sync/otp/": {},
    "/v1/multiplatform/sync/password/": {},
    "/v1/users/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A comma separated list of fieldnames with order. For example - first_name,asc;last_name,desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_created",
            "in": "query",
            "name": "date_created",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_modified",
            "in": "query",
            "name": "date_modified",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by email",
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by first_name",
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by last_name",
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by groups",
            "in": "query",
            "name": "groups",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by hide_email",
            "in": "query",
            "name": "hide_email",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by hide_phone",
            "in": "query",
            "name": "hide_phone",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by is_admin",
            "in": "query",
            "name": "is_admin",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by password_changed",
            "in": "query",
            "name": "password_changed",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by phone",
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by photo",
            "in": "query",
            "name": "photo",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by status",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by any of first_name, last_name and email with wildcard support",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter list of id:s (comma separated)",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersSchema"
                }
              }
            },
            "description": "Returns a list of users"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Specified page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List of users with details"
      },
      "post": {
        "description": "\nRequired roles:\n - can_create_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a created user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Create a new user"
      }
    },
    "/v1/users/basic/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A comma separated list of fieldnames with order. For example - first_name,asc;last_name,desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_created",
            "in": "query",
            "name": "date_created",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by date_modified",
            "in": "query",
            "name": "date_modified",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by email",
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by first_name",
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by last_name",
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by groups",
            "in": "query",
            "name": "groups",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by hide_email",
            "in": "query",
            "name": "hide_email",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by hide_phone",
            "in": "query",
            "name": "hide_phone",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by is_admin",
            "in": "query",
            "name": "is_admin",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by password_changed",
            "in": "query",
            "name": "password_changed",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by phone",
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by photo",
            "in": "query",
            "name": "photo",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by status",
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by any of first_name, last_name and email with wildcard support",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter list of id:s (comma separated)",
            "in": "query",
            "name": "ids",
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filter by list of emails (comma separated)",
            "in": "query",
            "name": "emails",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersSchema"
                }
              }
            },
            "description": "Returns a list of users"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Specified page does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List of users without details"
      }
    },
    "/v1/users/current/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns current user"
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update user"
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update user"
      }
    },
    "/v1/users/current/otp/configure/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mfa_methods": {
                      "description": "mfa methods",
                      "items": {
                        "enum": [
                          "MAIL_2SV",
                          "TOTP"
                        ],
                        "type": "string"
                      }
                    },
                    "mfa_required": {
                      "description": "is mfa required for the user",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Current otp configuration"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "code is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get current otp settings."
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpEditSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful verification"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "code is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Configure OTP settings."
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpEditSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful verification"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "code is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Configure OTP settings."
      }
    },
    "/v1/users/current/photo/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete current user photo image."
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "image/*": {
              "schema": {
                "properties": {
                  "photo": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "photo": {
                      "description": "Url for the user original photo",
                      "type": "string"
                    },
                    "photo_big": {
                      "description": "Url for the user re-sized big photo",
                      "type": "string"
                    },
                    "photo_small": {
                      "description": "Url for the user re-sized small photo",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns url for user photo"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Upload current user photo image."
      }
    },
    "/v1/users/current/roles/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesSchema"
                }
              }
            },
            "description": "Returns a user's roles"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns current user roles"
      }
    },
    "/v1/users/current/totp/configure/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configure TOTP"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete totp confguration"
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSchema"
              }
            }
          },
          "description": "body",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "secret": {
                      "description": "secret key",
                      "type": "string"
                    },
                    "url": {
                      "description": "provisioning URIs",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Configure TOTP"
          },
          "400": {
            "description": "Bad request"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Setup totp"
      }
    },
    "/v1/users/current/totp/validate_configuration/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful verification"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "code is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Validate totp configuration"
      }
    },
    "/v1/users/domain_managers/": {},
    "/v1/users/email/": {},
    "/v1/users/email/{email}/": {},
    "/v1/users/emails/": {},
    "/v1/users/saml/": {},
    "/v1/users/saml/{user_id}/": {},
    "/v1/users/{user_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a particular user by id"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns a particular user by id"
      },
      "patch": {
        "description": "\nRequired roles:\n - can_write_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update user"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update user"
      }
    },
    "/v1/users/{user_id}/photo/": {
      "delete": {
        "description": "\nRequired roles:\n - can_write_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "No body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a photo image of a specified user."
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "image/*": {
              "schema": {
                "properties": {
                  "photo": {
                    "format": "binary",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "photo": {
                      "description": "Url for the user original photo",
                      "type": "string"
                    },
                    "photo_big": {
                      "description": "Url for the user re-sized big photo",
                      "type": "string"
                    },
                    "photo_small": {
                      "description": "Url for the user re-sized small photo",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns url for user photo"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Upload user photo image."
      }
    },
    "/v1/users/{user_id}/reindex/": {
      "post": {
        "description": "\nRequired roles:\n - can_reindex_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns a job"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Reindex a particular user by id"
      }
    },
    "/v1/users/{user_id}/roles/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRolesSchema"
                }
              }
            },
            "description": "Returns a user's roles"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns user roles by user_id"
      }
    },
    "/v1/users/{user_id}/roles/{role}/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_users\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "role",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns 200 if user has role"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Returns 404 if user doesn't have role"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns user roles by user_id"
      }
    },
    "/v1/users/{user_id}/saml/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Remove a user's SAML IdP setting"
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSamlIdpUpdateSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchema"
                }
              }
            },
            "description": "Returns an updated user"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "User does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Update a user's SAML IdP settings"
      }
    }
  },
  "servers": [
    {
      "url": "/API/users/"
    }
  ]
}