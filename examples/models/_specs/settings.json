{
  "components": {
    "schemas": {
      "AllowedIPSchema": {
        "properties": {
          "app_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "ip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CORSHostSchema": {
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "host"
        ],
        "type": "object"
      },
      "CORSHostsSchema": {
        "properties": {
          "objects": {
            "items": {
              "$ref": "#/components/schemas/CORSHostSchema"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DefaultShareOptionsTypeSchema": {
        "properties": {
          "allow_approving_comments": {
            "type": "boolean"
          },
          "allow_comments": {
            "type": "boolean"
          },
          "allow_custom_actions": {
            "type": "boolean"
          },
          "allow_download": {
            "type": "boolean"
          },
          "allow_download_proxy": {
            "type": "boolean"
          },
          "allow_setting_approve_status": {
            "type": "boolean"
          },
          "allow_upload": {
            "type": "boolean"
          },
          "allow_view_transcriptions": {
            "type": "boolean"
          },
          "allow_view_versions": {
            "type": "boolean"
          },
          "can_change_allow_approving_comments": {
            "type": "boolean"
          },
          "can_change_allow_comments": {
            "type": "boolean"
          },
          "can_change_allow_custom_actions": {
            "type": "boolean"
          },
          "can_change_allow_download": {
            "type": "boolean"
          },
          "can_change_allow_download_proxy": {
            "type": "boolean"
          },
          "can_change_allow_setting_approve_status": {
            "type": "boolean"
          },
          "can_change_allow_upload": {
            "type": "boolean"
          },
          "can_change_allow_view_transcriptions": {
            "type": "boolean"
          },
          "can_change_allow_view_versions": {
            "type": "boolean"
          },
          "can_change_search_users_from_share": {
            "type": "boolean"
          },
          "can_change_share_expiration_time": {
            "type": "boolean"
          },
          "can_change_show_watermark": {
            "type": "boolean"
          },
          "require_password": {
            "type": "boolean"
          },
          "show_watermark": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FacetFieldSchema": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "GlobalSettingsSchema": {
        "properties": {
          "debug": {
            "type": "boolean"
          },
          "log_level": {
            "enum": [
              "NOTSET",
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "GroupSettingPublicSchema": {
        "properties": {
          "acl_template_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "append_asset_uuid_to_downloads": {
            "nullable": true,
            "type": "boolean"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_ip": {
            "readOnly": true,
            "type": "string"
          },
          "collections_get_parent_acls": {
            "nullable": true,
            "type": "boolean"
          },
          "date_format": {
            "nullable": true,
            "type": "string"
          },
          "datetime_format": {
            "nullable": true,
            "type": "string"
          },
          "default_upload_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "delete_grace_period": {
            "description": "Grace period that indicate how long objects will live in recycle bin. Unit: hours",
            "format": "int32",
            "maximum": 87600,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "filters_default_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "group_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "hide_favourites": {
            "nullable": true,
            "type": "boolean"
          },
          "home_page": {
            "nullable": true,
            "type": "string"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboard"
              }
            ],
            "nullable": true
          },
          "logo_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "logo_url": {
            "readOnly": true,
            "type": "string"
          },
          "required_metadata_views": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_auto_resize_title_column": {
            "nullable": true,
            "type": "boolean"
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayField"
            },
            "type": "array"
          },
          "search_in_transcriptions": {
            "nullable": true,
            "type": "boolean"
          },
          "search_results_asset_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_results_collection_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "share_expiration_time": {
            "description": "Default share expiration time that indicate how long share will be valid. Unit: days",
            "format": "int32",
            "maximum": 3650,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "use_asset_name_on_download": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GroupSettingSchema": {
        "properties": {
          "group_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "logo_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "logo_url": {
            "nullable": true,
            "type": "string"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobsDashboard": {
        "properties": {
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/JobsDashboardWidget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobsDashboardSchema": {
        "properties": {
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/JobsDashboardWidget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobsDashboardWidget": {
        "properties": {
          "id": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/JobsWidgetOption"
          },
          "title": {
            "nullable": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "JOBS_LIST",
              "JOBS_STATS_LIST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobsDashboardWidgetSchema": {
        "properties": {
          "id": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/JobsWidgetOption"
          },
          "title": {
            "nullable": true,
            "type": "string"
          },
          "type": {
            "enum": [
              "JOBS_LIST",
              "JOBS_STATS_LIST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobsWidgetOption": {
        "properties": {
          "columns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filters": {
            "type": "object"
          },
          "limit": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/Sort"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobsWidgetOptionFilterSchema": {
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "value": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobsWidgetOptionSchema": {
        "properties": {
          "columns": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "filters": {
            "type": "object"
          },
          "limit": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/Sort"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KubernetesSettingSchema": {
        "properties": {
          "settings": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "MergedSettingsSchema": {
        "properties": {
          "acl_template_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "allow_play_original_during_transcoding": {
            "description": "Allow playing the original file while transcoding is in progress.",
            "nullable": true,
            "type": "boolean"
          },
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "append_asset_uuid_to_downloads": {
            "nullable": true,
            "type": "boolean"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_ip": {
            "readOnly": true,
            "type": "string"
          },
          "collections_get_parent_acls": {
            "nullable": true,
            "type": "boolean"
          },
          "cors_hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "custom_terms": {
            "readOnly": true,
            "type": "boolean"
          },
          "date_format": {
            "nullable": true,
            "type": "string"
          },
          "datetime_format": {
            "nullable": true,
            "type": "string"
          },
          "default_share_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultShareOptionsTypeSchema"
              }
            ],
            "nullable": true
          },
          "default_upload_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "delete_grace_period": {
            "description": "Grace period that indicate how long objects will live in recycle bin. Unit: hours",
            "format": "int32",
            "maximum": 87600,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "disable_billing_page": {
            "readOnly": true,
            "type": "boolean"
          },
          "domain_has_preloaded_assets": {
            "readOnly": true,
            "type": "boolean"
          },
          "enable_shield": {
            "nullable": true,
            "type": "boolean"
          },
          "external_share": {
            "nullable": true,
            "type": "boolean"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "filters_default_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "genesis": {
            "nullable": true,
            "type": "string"
          },
          "group_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "hide_favourites": {
            "nullable": true,
            "type": "boolean"
          },
          "home_page": {
            "nullable": true,
            "type": "string"
          },
          "image_properties_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "is_plg_domain": {
            "readOnly": true,
            "type": "boolean"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboardSchema"
              }
            ],
            "nullable": true
          },
          "locations_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "lock_mapped_collections": {
            "description": "Forbid regular users to edit or delete mapped collections.",
            "nullable": true,
            "type": "boolean"
          },
          "logo_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "logo_url": {
            "readOnly": true,
            "type": "string"
          },
          "logos_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "max_browse_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_power_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_standard_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_storage_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "max_traffic_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "mfa_methods": {
            "items": {
              "enum": [
                "TOTP",
                "MAIL_2SV"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "mfa_required": {
            "nullable": true,
            "type": "boolean"
          },
          "password_checks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordChecksType"
              }
            ],
            "nullable": true
          },
          "required_metadata_views": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "safe_searches_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "saml_require_groups": {
            "nullable": true,
            "type": "boolean"
          },
          "search_auto_resize_title_column": {
            "nullable": true,
            "type": "boolean"
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayField"
            },
            "type": "array"
          },
          "search_in_transcriptions": {
            "nullable": true,
            "type": "boolean"
          },
          "search_results_asset_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_results_collection_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_users_from_share": {
            "nullable": true,
            "type": "boolean"
          },
          "share_expiration_time": {
            "description": "Default share expiration time that indicate how long share will be valid. Unit: days",
            "format": "int32",
            "maximum": 3650,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "show_persons_confirmation_modal": {
            "nullable": true,
            "type": "boolean"
          },
          "support_access": {
            "nullable": true,
            "type": "boolean"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domain_name": {
            "readOnly": true,
            "type": "string"
          },
          "tags_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "texts_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "update_saml_primary_group_on_login": {
            "nullable": true,
            "type": "boolean"
          },
          "use_asset_name_on_download": {
            "nullable": true,
            "type": "boolean"
          },
          "watermark_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WatermarkOptionsType"
              }
            ],
            "nullable": true
          }
        },
        "type": "object"
      },
      "PasswordChecksType": {
        "properties": {
          "digits": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "lowercase": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "max_length": {
            "format": "int32",
            "maximum": 64,
            "minimum": 8,
            "nullable": true,
            "type": "integer"
          },
          "min_length": {
            "format": "int32",
            "maximum": 56,
            "minimum": 8,
            "nullable": true,
            "type": "integer"
          },
          "special_symbols": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "uppercase": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PasswordChecksTypeSchema": {
        "properties": {
          "digits": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "lowercase": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "max_length": {
            "format": "int32",
            "maximum": 64,
            "minimum": 8,
            "nullable": true,
            "type": "integer"
          },
          "min_length": {
            "format": "int32",
            "maximum": 56,
            "minimum": 8,
            "nullable": true,
            "type": "integer"
          },
          "special_symbols": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "uppercase": {
            "format": "int32",
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SearchDisplayField": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SearchDisplayFieldSchema": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Sort": {
        "properties": {
          "name": {
            "type": "string"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SortSchema": {
        "properties": {
          "name": {
            "type": "string"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SystemSettingPublicSchema": {
        "properties": {
          "acl_template_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "allow_play_original_during_transcoding": {
            "description": "Allow playing the original file while transcoding is in progress.",
            "nullable": true,
            "type": "boolean"
          },
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "append_asset_uuid_to_downloads": {
            "nullable": true,
            "type": "boolean"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_ip": {
            "readOnly": true,
            "type": "string"
          },
          "collections_get_parent_acls": {
            "nullable": true,
            "type": "boolean"
          },
          "cors_hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "custom_terms": {
            "readOnly": true,
            "type": "boolean"
          },
          "date_format": {
            "nullable": true,
            "type": "string"
          },
          "datetime_format": {
            "nullable": true,
            "type": "string"
          },
          "default_share_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultShareOptionsTypeSchema"
              }
            ],
            "nullable": true
          },
          "default_upload_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "delete_grace_period": {
            "description": "Grace period that indicate how long objects will live in recycle bin. Unit: hours",
            "format": "int32",
            "maximum": 87600,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "disable_billing_page": {
            "readOnly": true,
            "type": "boolean"
          },
          "domain_has_preloaded_assets": {
            "readOnly": true,
            "type": "boolean"
          },
          "enable_shield": {
            "nullable": true,
            "type": "boolean"
          },
          "external_share": {
            "nullable": true,
            "type": "boolean"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "features": {
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "filters_default_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "hide_favourites": {
            "nullable": true,
            "type": "boolean"
          },
          "home_page": {
            "nullable": true,
            "type": "string"
          },
          "image_properties_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "is_plg_domain": {
            "readOnly": true,
            "type": "boolean"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboardSchema"
              }
            ],
            "nullable": true
          },
          "locations_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "lock_mapped_collections": {
            "description": "Forbid regular users to edit or delete mapped collections.",
            "nullable": true,
            "type": "boolean"
          },
          "logo_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "logo_url": {
            "readOnly": true,
            "type": "string"
          },
          "logos_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "max_browse_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_power_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_standard_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_storage_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "max_traffic_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "mfa_methods": {
            "items": {
              "enum": [
                "TOTP",
                "MAIL_2SV"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "mfa_required": {
            "nullable": true,
            "type": "boolean"
          },
          "password_checks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordChecksTypeSchema"
              }
            ],
            "nullable": true
          },
          "required_metadata_views": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "safe_searches_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "saml_require_groups": {
            "nullable": true,
            "type": "boolean"
          },
          "search_auto_resize_title_column": {
            "nullable": true,
            "type": "boolean"
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayFieldSchema"
            },
            "type": "array"
          },
          "search_in_transcriptions": {
            "nullable": true,
            "type": "boolean"
          },
          "search_results_asset_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_results_collection_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_users_from_share": {
            "nullable": true,
            "type": "boolean"
          },
          "share_expiration_time": {
            "description": "Default share expiration time that indicate how long share will be valid. Unit: days",
            "format": "int32",
            "maximum": 3650,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "support_access": {
            "nullable": true,
            "type": "boolean"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domain_name": {
            "readOnly": true,
            "type": "string"
          },
          "tags_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "texts_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "update_saml_primary_group_on_login": {
            "nullable": true,
            "type": "boolean"
          },
          "use_asset_name_on_download": {
            "nullable": true,
            "type": "boolean"
          },
          "watermark_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WatermarkOptionsType"
              }
            ],
            "nullable": true
          }
        },
        "type": "object"
      },
      "SystemSettingSchema": {
        "properties": {
          "acl_template_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "allow_play_original_during_transcoding": {
            "description": "Allow playing the original file while transcoding is in progress.",
            "nullable": true,
            "type": "boolean"
          },
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "append_asset_uuid_to_downloads": {
            "nullable": true,
            "type": "boolean"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_ip": {
            "readOnly": true,
            "type": "string"
          },
          "collections_get_parent_acls": {
            "nullable": true,
            "type": "boolean"
          },
          "cors_hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "date_format": {
            "nullable": true,
            "type": "string"
          },
          "datetime_format": {
            "nullable": true,
            "type": "string"
          },
          "default_share_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultShareOptionsTypeSchema"
              }
            ],
            "nullable": true
          },
          "default_upload_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "delete_grace_period": {
            "description": "Grace period that indicate how long objects will live in recycle bin. Unit: hours",
            "format": "int32",
            "maximum": 87600,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "enable_shield": {
            "nullable": true,
            "type": "boolean"
          },
          "external_share": {
            "nullable": true,
            "type": "boolean"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "filters_default_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "hide_favourites": {
            "nullable": true,
            "type": "boolean"
          },
          "home_page": {
            "nullable": true,
            "type": "string"
          },
          "image_properties_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboardSchema"
              }
            ],
            "nullable": true
          },
          "locations_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "lock_mapped_collections": {
            "description": "Forbid regular users to edit or delete mapped collections.",
            "nullable": true,
            "type": "boolean"
          },
          "logo_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "logo_url": {
            "nullable": true,
            "type": "string"
          },
          "logos_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "max_browse_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_power_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_standard_users": {
            "format": "int32",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "type": "integer"
          },
          "max_storage_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "max_traffic_bytes": {
            "format": "int64",
            "maximum": 9223372036854775807,
            "minimum": -9223372036854775808,
            "nullable": true,
            "type": "integer"
          },
          "mfa_methods": {
            "items": {
              "enum": [
                "TOTP",
                "MAIL_2SV"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "mfa_required": {
            "nullable": true,
            "type": "boolean"
          },
          "password_checks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordChecksTypeSchema"
              }
            ],
            "nullable": true
          },
          "required_metadata_views": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "safe_searches_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "saml_require_groups": {
            "nullable": true,
            "type": "boolean"
          },
          "search_auto_resize_title_column": {
            "nullable": true,
            "type": "boolean"
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayFieldSchema"
            },
            "type": "array"
          },
          "search_in_transcriptions": {
            "nullable": true,
            "type": "boolean"
          },
          "search_results_asset_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_results_collection_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_users_from_share": {
            "nullable": true,
            "type": "boolean"
          },
          "share_expiration_time": {
            "description": "Default share expiration time that indicate how long share will be valid. Unit: days",
            "format": "int32",
            "maximum": 3650,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "support_access": {
            "nullable": true,
            "type": "boolean"
          },
          "system_domain_id": {
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "system_domain_name": {
            "readOnly": true,
            "type": "string"
          },
          "tags_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "texts_metadata_field": {
            "nullable": true,
            "type": "string"
          },
          "update_saml_primary_group_on_login": {
            "nullable": true,
            "type": "boolean"
          },
          "use_asset_name_on_download": {
            "nullable": true,
            "type": "boolean"
          },
          "watermark_options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WatermarkOptionsType"
              }
            ],
            "nullable": true
          }
        },
        "type": "object"
      },
      "UserSettingRemoveAttributesSchema": {
        "properties": {
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboardSchema"
              }
            ],
            "nullable": true
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayFieldSchema"
            },
            "type": "array"
          },
          "user_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "user_ids"
        ],
        "type": "object"
      },
      "UserSettingSchema": {
        "properties": {
          "acl_template_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "allowed_ips": {
            "items": {
              "$ref": "#/components/schemas/AllowedIPSchema"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "append_asset_uuid_to_downloads": {
            "nullable": true,
            "type": "boolean"
          },
          "asset_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_ip": {
            "readOnly": true,
            "type": "string"
          },
          "collections_get_parent_acls": {
            "nullable": true,
            "type": "boolean"
          },
          "date_format": {
            "nullable": true,
            "type": "string"
          },
          "datetime_format": {
            "nullable": true,
            "type": "string"
          },
          "default_upload_storage_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "delete_grace_period": {
            "description": "Grace period that indicate how long objects will live in recycle bin. Unit: hours",
            "format": "int32",
            "maximum": 87600,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "facet_fields": {
            "items": {
              "$ref": "#/components/schemas/FacetFieldSchema"
            },
            "type": "array"
          },
          "filters_default_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "genesis": {
            "nullable": true,
            "type": "string"
          },
          "hide_favourites": {
            "nullable": true,
            "type": "boolean"
          },
          "home_page": {
            "nullable": true,
            "type": "string"
          },
          "jobs_dashboard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobsDashboardSchema"
              }
            ],
            "nullable": true
          },
          "search_auto_resize_title_column": {
            "nullable": true,
            "type": "boolean"
          },
          "search_default_sections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_display_fields": {
            "items": {
              "$ref": "#/components/schemas/SearchDisplayFieldSchema"
            },
            "type": "array"
          },
          "search_in_transcriptions": {
            "nullable": true,
            "type": "boolean"
          },
          "search_results_asset_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "search_results_collection_metadata_view_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "share_expiration_time": {
            "description": "Default share expiration time that indicate how long share will be valid. Unit: days",
            "format": "int32",
            "maximum": 3650,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "show_persons_confirmation_modal": {
            "nullable": true,
            "type": "boolean"
          },
          "use_asset_name_on_download": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "WatermarkOptionsType": {
        "properties": {
          "custom_text": {
            "type": "string"
          },
          "include_custom_text": {
            "type": "boolean"
          },
          "include_date_time": {
            "type": "boolean"
          },
          "include_email": {
            "type": "boolean"
          },
          "include_ip_address": {
            "type": "boolean"
          },
          "shadow_opacity": {
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "show_watermark": {
            "type": "boolean"
          },
          "text_appearance": {
            "enum": [
              "top",
              "center",
              "bottom"
            ],
            "type": "string"
          },
          "text_opacity": {
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "WatermarkOptionsTypeSchema": {
        "properties": {
          "custom_text": {
            "type": "string"
          },
          "include_custom_text": {
            "type": "boolean"
          },
          "include_date_time": {
            "type": "boolean"
          },
          "include_email": {
            "type": "boolean"
          },
          "include_ip_address": {
            "type": "boolean"
          },
          "shadow_opacity": {
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "show_watermark": {
            "type": "boolean"
          },
          "text_appearance": {
            "enum": [
              "top",
              "center",
              "bottom"
            ],
            "type": "string"
          },
          "text_opacity": {
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Iconik Settings",
    "version": "2.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {},
    "/ip/": {},
    "/livez/": {},
    "/readyz/": {},
    "/spec/": {},
    "/static/{filename}": {},
    "/v1/cors_hosts/": {
      "get": {
        "description": "\nRequired roles:\n - can_read_cors_hosts\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CORSHostsSchema"
                }
              }
            },
            "description": "Returns a system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List of CORS hosts"
      },
      "post": {
        "description": "\nRequired roles:\n - can_write_cors_hosts\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CORSHostSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CORSHostSchema"
                }
              }
            },
            "description": "Returns a created CORS host"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Create a new CORS host"
      }
    },
    "/v1/cors_hosts/{cors_host_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_delete_cors_hosts\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "cors_host_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a particular CORS host by id"
      },
      "get": {
        "description": "\nRequired roles:\n - can_read_cors_hosts\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "cors_host_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CORSHostSchema"
                }
              }
            },
            "description": "Returns a CORS host"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "CORS host does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns a particular CORS host by id"
      }
    },
    "/v1/group/{group_id}/": {
      "delete": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete group settings"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingPublicSchema"
                }
              }
            },
            "description": "Returns a group settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Group settings"
      },
      "patch": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed group settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change group settings"
      },
      "put": {
        "description": "\nRequired roles:\n - can_write_groups\n",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed group settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change group settings"
      }
    },
    "/v1/kubernetes/{realm}/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Which page number to fetch",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The number of items for each page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 10,
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesSettingSchema"
                }
              }
            },
            "description": "Returns a list of settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "List of settings"
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KubernetesSettingSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesSettingSchema"
                }
              }
            },
            "description": "Returns changed settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change settings"
      }
    },
    "/v1/kubernetes/{realm}/{setting_name}/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "setting_name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete a particular setting by name"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "realm",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "setting_name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KubernetesSettingSchema"
                }
              }
            },
            "description": "Returns value for the setting"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Returns value for the setting"
      }
    },
    "/v1/merged/current/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "ignore_logo_url",
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergedSettingsSchema"
                }
              }
            },
            "description": "Returns a merged settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get merged settings for current user"
      }
    },
    "/v1/merged/{user_id}/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "ignore_logo_url",
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergedSettingsSchema"
                }
              }
            },
            "description": "Returns a merged settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Get merged settings for a specific user"
      }
    },
    "/v1/system/current/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "ignore_logo_url",
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns a system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "System settings"
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change system settings"
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change system settings"
      }
    },
    "/v1/system/{system_domain_id}/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "system_domain_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "query",
            "name": "ignore_logo_url",
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns a system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "System settings"
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "system_domain_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change system settings"
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "system_domain_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemSettingPublicSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettingPublicSchema"
                }
              }
            },
            "description": "Returns changed system settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change system settings"
      }
    },
    "/v1/user/attributes/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingRemoveAttributesSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns changed user settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Remove attributes from user settings"
      }
    },
    "/v1/user/{user_id}/": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "Without body"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Delete user settings"
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingSchema"
                }
              }
            },
            "description": "Returns a user settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "404": {
            "description": "Realm does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "User settings"
      },
      "patch": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingSchema"
                }
              }
            },
            "description": "Returns changed user settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change user settings"
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "in": "header",
            "name": "App-ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "header",
            "name": "Auth-Token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSettingSchema"
              }
            }
          },
          "description": "body",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSettingSchema"
                }
              }
            },
            "description": "Returns changed user settings"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Token is invalid"
          },
          "default": {
            "content": {
              "application/json": {
                "examples": {
                  "multiple": {
                    "summary": "Example multiple messages.",
                    "value": {
                      "errors": {
                        "field1": "Error message for field1",
                        "field2": "Error message for field2"
                      }
                    }
                  },
                  "single": {
                    "summary": "Example single message.",
                    "value": {
                      "errors": [
                        "Example error message."
                      ]
                    }
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "errors": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "errors": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Error response"
          }
        },
        "summary": "Change user settings"
      }
    }
  },
  "servers": [
    {
      "url": "/API/settings/"
    }
  ]
}